Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_command) for LCD_command
    lcd.o(.ARM.exidx.text.LCD_init) refers to lcd.o(.text.LCD_init) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.delayMs) refers to lcd.o(.text.delayMs) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.LCD_command) refers to lcd.o(.text.LCD_command) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.delayUs) refers to lcd.o(.text.delayUs) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.lcd_data) refers to lcd.o(.text.lcd_data) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.lcd_text_data) refers to lcd.o(.text.lcd_text_data) for [Anonymous Symbol]
    lcd.o(.text.LCD_setcursorRowCol) refers to lcd.o(.text.LCD_command) for LCD_command
    lcd.o(.ARM.exidx.text.LCD_setcursorRowCol) refers to lcd.o(.text.LCD_setcursorRowCol) for [Anonymous Symbol]
    main.o(.text.main) refers to lcd.o(.text.LCD_init) for LCD_init
    main.o(.text.main) refers to uart0.o(.text.initUART) for initUART
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.xQueuel) for xQueuel
    main.o(.text.main) refers to main.o(.bss.xQueue2) for xQueue2
    main.o(.text.main) refers to main.o(.text.Taskl) for Taskl
    main.o(.text.main) refers to tasks_1.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.Task2) for Task2
    main.o(.text.main) refers to main.o(.text.Task3) for Task3
    main.o(.text.main) refers to tasks_1.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.Taskl) refers to main.o(.bss.xQueue2) for xQueue2
    main.o(.text.Taskl) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.Taskl) refers to main.o(.bss.xQueuel) for xQueuel
    main.o(.text.Taskl) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.Taskl) refers to tasks_1.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.Taskl) refers to main.o(.text.Taskl) for [Anonymous Symbol]
    main.o(.text.Task2) refers to lcd.o(.text.LCD_command) for LCD_command
    main.o(.text.Task2) refers to main.o(.bss.selection) for selection
    main.o(.text.Task2) refers to main.o(.data.cities) for cities
    main.o(.text.Task2) refers to main.o(.data.timediff) for timediff
    main.o(.text.Task2) refers to lcd.o(.text.lcd_text_data) for lcd_text_data
    main.o(.text.Task2) refers to main.o(.bss.xQueuel) for xQueuel
    main.o(.text.Task2) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.Task2) refers to lcd.o(.text.LCD_setcursorRowCol) for LCD_setcursorRowCol
    main.o(.text.Task2) refers to lcd.o(.text.lcd_data) for lcd_data
    main.o(.ARM.exidx.text.Task2) refers to main.o(.text.Task2) for [Anonymous Symbol]
    main.o(.text.Task3) refers to uart0.o(.text.send_text_to_uart) for send_text_to_uart
    main.o(.text.Task3) refers to uart0.o(.text.Read_Time) for Read_Time
    main.o(.text.Task3) refers to main.o(.bss.xQueue2) for xQueue2
    main.o(.text.Task3) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.Task3) refers to main.o(.data.cities) for cities
    main.o(.text.Task3) refers to main.o(.bss.selection) for selection
    main.o(.text.Task3) refers to uart0.o(.text.send_char_to_uart) for send_char_to_uart
    main.o(.text.Task3) refers to uart0.o(.text.Read_From_Keyboard) for Read_From_Keyboard
    main.o(.ARM.exidx.text.Task3) refers to main.o(.text.Task3) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to main.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    uart0.o(.text.initUART) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    uart0.o(.text.initUART) refers to uart.o(i.UARTDisable) for UARTDisable
    uart0.o(.text.initUART) refers to sysctl.o(i.SysCtlClockGet) for SysCtlClockGet
    uart0.o(.text.initUART) refers to uart.o(i.UARTConfigSetExpClk) for UARTConfigSetExpClk
    uart0.o(.text.initUART) refers to uart.o(i.UARTFIFOEnable) for UARTFIFOEnable
    uart0.o(.text.initUART) refers to gpio.o(i.GPIOPinConfigure) for GPIOPinConfigure
    uart0.o(.text.initUART) refers to uart.o(i.UARTEnable) for UARTEnable
    uart0.o(.text.initUART) refers to gpio.o(i.GPIOPinTypeUART) for GPIOPinTypeUART
    uart0.o(.ARM.exidx.text.initUART) refers to uart0.o(.text.initUART) for [Anonymous Symbol]
    uart0.o(.text.send_text_to_uart) refers to uart.o(i.UARTCharPut) for UARTCharPut
    uart0.o(.ARM.exidx.text.send_text_to_uart) refers to uart0.o(.text.send_text_to_uart) for [Anonymous Symbol]
    uart0.o(.text.send_char_to_uart) refers to uart.o(i.UARTCharPut) for UARTCharPut
    uart0.o(.ARM.exidx.text.send_char_to_uart) refers to uart0.o(.text.send_char_to_uart) for [Anonymous Symbol]
    uart0.o(.text.Read_From_Keyboard) refers to uart.o(i.UARTCharsAvail) for UARTCharsAvail
    uart0.o(.text.Read_From_Keyboard) refers to uart.o(i.UARTCharGetNonBlocking) for UARTCharGetNonBlocking
    uart0.o(.text.Read_From_Keyboard) refers to uart0.o(.text.send_char_to_uart) for send_char_to_uart
    uart0.o(.ARM.exidx.text.Read_From_Keyboard) refers to uart0.o(.text.Read_From_Keyboard) for [Anonymous Symbol]
    uart0.o(.text.Read_Time) refers to uart.o(i.UARTCharsAvail) for UARTCharsAvail
    uart0.o(.text.Read_Time) refers to uart.o(i.UARTCharGetNonBlocking) for UARTCharGetNonBlocking
    uart0.o(.text.Read_Time) refers to uart0.o(.text.send_char_to_uart) for send_char_to_uart
    uart0.o(.ARM.exidx.text.Read_Time) refers to uart0.o(.text.Read_Time) for [Anonymous Symbol]
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.text.getOscClk) refers to system_tm4c123.o(.rodata..Lswitch.table.getOscClk) for .Lswitch.table.getOscClk
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks_1.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks_1.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks_1.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks_1.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks_1.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_2.o(.text.pvPortMalloc) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.pvPortMalloc.xHeapHasBeenInitialised) for pvPortMalloc.xHeapHasBeenInitialised
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.text.prvHeapInit) for prvHeapInit
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.xStart) for xStart
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.xEnd) for xEnd
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.text.pvPortMalloc) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(.ARM.exidx.text.pvPortMalloc) refers to heap_2.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_2.o(.text.prvHeapInit) refers to heap_2.o(.bss.ucHeap) for ucHeap
    heap_2.o(.text.prvHeapInit) refers to heap_2.o(.bss.xStart) for xStart
    heap_2.o(.text.prvHeapInit) refers to heap_2.o(.bss.xEnd) for xEnd
    heap_2.o(.ARM.exidx.text.prvHeapInit) refers to heap_2.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_2.o(.text.vPortFree) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(.text.vPortFree) refers to heap_2.o(.bss.xStart) for xStart
    heap_2.o(.text.vPortFree) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.text.vPortFree) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(.ARM.exidx.text.vPortFree) refers to heap_2.o(.text.vPortFree) for [Anonymous Symbol]
    heap_2.o(.text.xPortGetFreeHeapSize) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_2.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_2.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_2.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.prvCopyDataToQueue) refers to tasks_1.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks_1.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_2.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskCreate) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    tasks_1.o(.text.xTaskCreate) refers to heap_2.o(.text.vPortFree) for vPortFree
    tasks_1.o(.text.xTaskCreate) refers to tasks_1.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks_1.o(.text.xTaskCreate) refers to tasks_1.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks_1.o(.ARM.exidx.text.xTaskCreate) refers to tasks_1.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks_1.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks_1.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks_1.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks_1.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks_1.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks_1.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.ARM.exidx.text.vTaskDelete) refers to tasks_1.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks_1.o(.text.prvDeleteTCB) refers to heap_2.o(.text.vPortFree) for vPortFree
    tasks_1.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks_1.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks_1.o(.text.prvResetNextTaskUnblockTime) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.prvResetNextTaskUnblockTime) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskDelayUntil) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskDelayUntil) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.vTaskDelayUntil) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.vTaskDelayUntil) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.text.vTaskDelayUntil) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.vTaskDelayUntil) refers to tasks_1.o(.text.vTaskDelayUntil) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskSuspendAll) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks_1.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskResumeAll) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskResumeAll) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.xPendedTicks) for xPendedTicks
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks_1.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks_1.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskDelay) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskDelay) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.vTaskDelay) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.text.vTaskDelay) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.vTaskDelay) refers to tasks_1.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.ARM.exidx.text.eTaskGetState) refers to tasks_1.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.uxTaskPriorityGet) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks_1.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks_1.o(.text.uxTaskPriorityGetFromISR) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks_1.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskPrioritySet) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskPrioritySet) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskPrioritySet) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskPrioritySet) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks_1.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks_1.o(.ARM.exidx.text.vTaskSuspend) refers to tasks_1.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks_1.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskResume) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskResume) refers to tasks_1.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks_1.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskResume) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskResume) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskResume) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.vTaskResume) refers to tasks_1.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks_1.o(.text.prvTaskIsTaskSuspended) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks_1.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks_1.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.text.prvIdleTask) for prvIdleTask
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.text.xTaskCreate) for xTaskCreate
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks_1.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks_1.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.text.prvGetExpectedIdleTime) for prvGetExpectedIdleTime
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.prvIdleTask) refers to tasks_1.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskEndScheduler) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks_1.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks_1.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xPendedTicks) for xPendedTicks
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskIncrementTick) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.xTaskIncrementTick) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks_1.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetTickCount) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks_1.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks_1.o(.text.xTaskGetTickCountFromISR) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks_1.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskGetNumberOfTasks) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks_1.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks_1.o(.text.pcTaskGetName) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.pcTaskGetName) refers to tasks_1.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks_1.o(.text.xTaskGetHandle) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.xTaskGetHandle) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskGetHandle) refers to tasks_1.o(.text.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks_1.o(.text.xTaskGetHandle) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.text.xTaskGetHandle) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.xTaskGetHandle) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.xTaskGetHandle) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.xTaskGetHandle) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks_1.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks_1.o(.ARM.exidx.text.prvSearchForNameWithinSingleList) refers to tasks_1.o(.text.prvSearchForNameWithinSingleList) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks_1.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks_1.o(.text.prvListTasksWithinSingleList) refers to tasks_1.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks_1.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks_1.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetIdleTaskHandle) refers to tasks_1.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks_1.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks_1.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskStepTick) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.vTaskStepTick) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.ARM.exidx.text.vTaskStepTick) refers to tasks_1.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskCatchUpTicks) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskCatchUpTicks) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.xTaskCatchUpTicks) refers to tasks_1.o(.bss.xPendedTicks) for xPendedTicks
    tasks_1.o(.text.xTaskCatchUpTicks) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks_1.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskAbortDelay) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.xTaskAbortDelay) refers to tasks_1.o(.text.eTaskGetState) for eTaskGetState
    tasks_1.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.xTaskAbortDelay) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskAbortDelay) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskAbortDelay) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.xTaskAbortDelay) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskAbortDelay) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.text.xTaskAbortDelay) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks_1.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskPlaceOnEventList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks_1.o(.text.vTaskPlaceOnEventList) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskSetTimeOutState) refers to tasks_1.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks_1.o(.text.vTaskSetTimeOutState) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks_1.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskInternalSetTimeOutState) refers to tasks_1.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks_1.o(.text.vTaskInternalSetTimeOutState) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to tasks_1.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks_1.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskMissedYield) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks_1.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks_1.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks_1.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks_1.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks_1.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks_1.o(.text.eTaskConfirmSleepModeStatus) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.eTaskConfirmSleepModeStatus) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.text.eTaskConfirmSleepModeStatus) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.eTaskConfirmSleepModeStatus) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks_1.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.text.eTaskGetState) for eTaskGetState
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks_1.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks_1.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks_1.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks_1.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks_1.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks_1.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2) refers to tasks_1.o(.text.uxTaskGetStackHighWaterMark2) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskGetStackHighWaterMark) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.uxTaskGetStackHighWaterMark) refers to tasks_1.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks_1.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks_1.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetCurrentTaskHandle) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetSchedulerState) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.xTaskGetSchedulerState) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks_1.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskPriorityInherit) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskPriorityInherit) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskPriorityInherit) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskPriorityInherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks_1.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskPriorityDisinherit) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskPriorityDisinherit) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskPriorityDisinherit) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks_1.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskResetEventItemValue) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks_1.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks_1.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks_1.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks_1.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.ulTaskNotifyTake) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.ulTaskNotifyTake) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.ulTaskNotifyTake) refers to tasks_1.o(.text.ulTaskNotifyTake) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskNotifyWait) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskNotifyWait) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.xTaskNotifyWait) refers to tasks_1.o(.text.xTaskNotifyWait) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskGenericNotify) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskGenericNotify) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskGenericNotify) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskGenericNotify) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.xTaskGenericNotify) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks_1.o(.text.xTaskGenericNotify) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks_1.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks_1.o(.text.vTaskNotifyGiveFromISR) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskNotifyGiveFromISR) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskNotifyGiveFromISR) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskNotifyGiveFromISR) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskNotifyGiveFromISR) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskNotifyGiveFromISR) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.vTaskNotifyGiveFromISR) refers to tasks_1.o(.text.vTaskNotifyGiveFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskNotifyStateClear) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.xTaskNotifyStateClear) refers to tasks_1.o(.text.xTaskNotifyStateClear) for [Anonymous Symbol]
    tasks_1.o(.text.ulTaskNotifyValueClear) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.ulTaskNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.ulTaskNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.ulTaskNotifyValueClear) refers to tasks_1.o(.text.ulTaskNotifyValueClear) for [Anonymous Symbol]
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks_1.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to tasks_1.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to tasks_1.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks_1.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks_1.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    tasks_1.o(.text.prvGetExpectedIdleTime) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.prvGetExpectedIdleTime) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.prvGetExpectedIdleTime) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.prvGetExpectedIdleTime) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.text.prvGetExpectedIdleTime) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.ARM.exidx.text.prvGetExpectedIdleTime) refers to tasks_1.o(.text.prvGetExpectedIdleTime) for [Anonymous Symbol]
    gpio.o(i.GPIOIntRegister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntRegisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntUnregister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOIntUnregisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOPinConfigure) refers to gpio.o(.constdata) for .constdata
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i._GPIOIntNumberGet) refers to gpio.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockFreqSet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockGet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockSet) refers to sysctl.o(.emb_text) for SysCtlDelay
    sysctl.o(i.SysCtlDeepSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    sysctl.o(i.SysCtlSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlVCOGet) refers to sysctl.o(.constdata) for .constdata
    uart.o(i.UARTIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    uart.o(i.UARTIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    uart.o(i.UARTIntRegister) refers to uart.o(.constdata) for .constdata
    uart.o(i.UARTIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    uart.o(i.UARTIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    uart.o(i.UARTIntUnregister) refers to uart.o(.constdata) for .constdata
    interrupt.o(i.IntDisable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntEnable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntIsEnabled) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntMasterDisable) refers to cpu.o(.emb_text) for CPUcpsid
    interrupt.o(i.IntMasterEnable) refers to cpu.o(.emb_text) for CPUcpsie
    interrupt.o(i.IntPendClear) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPendSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityMaskGet) refers to cpu.o(.emb_text) for CPUbasepriGet
    interrupt.o(i.IntPriorityMaskSet) refers to cpu.o(.emb_text) for CPUbasepriSet
    interrupt.o(i.IntPrioritySet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntRegister) refers to interrupt.o(vtable) for vtable
    interrupt.o(i.IntUnregister) refers to interrupt.o(i._IntDefaultHandler) for _IntDefaultHandler
    interrupt.o(i.IntUnregister) refers to interrupt.o(vtable) for vtable
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing lcd.o(.text), (0 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_init), (8 bytes).
    Removing lcd.o(.text.delayMs), (2 bytes).
    Removing lcd.o(.ARM.exidx.text.delayMs), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_command), (8 bytes).
    Removing lcd.o(.text.delayUs), (2 bytes).
    Removing lcd.o(.ARM.exidx.text.delayUs), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.lcd_data), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.lcd_text_data), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_setcursorRowCol), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.Taskl), (8 bytes).
    Removing main.o(.ARM.exidx.text.Task2), (8 bytes).
    Removing main.o(.ARM.exidx.text.Task3), (8 bytes).
    Removing main.o(.text.vApplicationStackOverflowHook), (2 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing uart0.o(.text), (0 bytes).
    Removing uart0.o(.ARM.exidx.text.initUART), (8 bytes).
    Removing uart0.o(.ARM.exidx.text.send_text_to_uart), (8 bytes).
    Removing uart0.o(.ARM.exidx.text.send_char_to_uart), (8 bytes).
    Removing uart0.o(.ARM.exidx.text.Read_From_Keyboard), (8 bytes).
    Removing uart0.o(.ARM.exidx.text.Read_Time), (8 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (132 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (56 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_tm4c123.o(.rodata..Lswitch.table.getOscClk), (92 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (38 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing port.o(.text.vPortValidateInterruptPriority), (98 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_2.o(.text), (0 bytes).
    Removing heap_2.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_2.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_2.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_2.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_2.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_2.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_2.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (32 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (26 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (454 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (282 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (226 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.text.prvGetDisinheritPriorityAfterTimeout), (18 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (376 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (170 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (132 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (38 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (42 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (30 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (30 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (12 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (42 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks_1.o(.text), (0 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks_1.o(.text.vTaskDelete), (238 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks_1.o(.text.vTaskDelayUntil), (168 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskDelayUntil), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks_1.o(.text.eTaskGetState), (156 bytes).
    Removing tasks_1.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks_1.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks_1.o(.text.uxTaskPriorityGetFromISR), (48 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks_1.o(.text.vTaskPrioritySet), (226 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks_1.o(.text.vTaskSuspend), (248 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks_1.o(.text.vTaskResume), (142 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks_1.o(.text.prvTaskIsTaskSuspended), (50 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks_1.o(.text.xTaskResumeFromISR), (176 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks_1.o(.text.vTaskEndScheduler), (36 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks_1.o(.text.xTaskGetTickCount), (12 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks_1.o(.text.xTaskGetTickCountFromISR), (18 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks_1.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks_1.o(.text.pcTaskGetName), (38 bytes).
    Removing tasks_1.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks_1.o(.text.xTaskGetHandle), (168 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks_1.o(.text.prvSearchForNameWithinSingleList), (106 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvSearchForNameWithinSingleList), (8 bytes).
    Removing tasks_1.o(.text.uxTaskGetSystemState), (192 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks_1.o(.text.prvListTasksWithinSingleList), (100 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks_1.o(.text.xTaskGetIdleTaskHandle), (34 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks_1.o(.text.xTaskCatchUpTicks), (60 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks_1.o(.text.xTaskAbortDelay), (156 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks_1.o(.text.vTaskPlaceOnUnorderedEventList), (90 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks_1.o(.text.vTaskRemoveFromUnorderedEventList), (154 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks_1.o(.text.vTaskSetTimeOutState), (58 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks_1.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks_1.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks_1.o(.text.vTaskGetInfo), (126 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks_1.o(.text.prvTaskCheckFreeStackSpace), (32 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks_1.o(.text.uxTaskGetStackHighWaterMark2), (22 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2), (8 bytes).
    Removing tasks_1.o(.text.uxTaskGetStackHighWaterMark), (22 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks_1.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks_1.o(.text.xTaskPriorityInherit), (170 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout), (186 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks_1.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks_1.o(.text.pvTaskIncrementMutexHeldCount), (24 bytes).
    Removing tasks_1.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks_1.o(.text.ulTaskNotifyTake), (106 bytes).
    Removing tasks_1.o(.ARM.exidx.text.ulTaskNotifyTake), (8 bytes).
    Removing tasks_1.o(.text.xTaskNotifyWait), (144 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskNotifyWait), (8 bytes).
    Removing tasks_1.o(.text.xTaskGenericNotify), (256 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks_1.o(.text.xTaskGenericNotifyFromISR), (300 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks_1.o(.text.vTaskNotifyGiveFromISR), (220 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskNotifyGiveFromISR), (8 bytes).
    Removing tasks_1.o(.text.xTaskNotifyStateClear), (44 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskNotifyStateClear), (8 bytes).
    Removing tasks_1.o(.text.ulTaskNotifyValueClear), (42 bytes).
    Removing tasks_1.o(.ARM.exidx.text.ulTaskNotifyValueClear), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvGetExpectedIdleTime), (8 bytes).
    Removing gpio.o(i.GPIOADCTriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIOADCTriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODMATriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIODMATriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODirModeGet), (34 bytes).
    Removing gpio.o(i.GPIOIntClear), (6 bytes).
    Removing gpio.o(i.GPIOIntDisable), (14 bytes).
    Removing gpio.o(i.GPIOIntEnable), (12 bytes).
    Removing gpio.o(i.GPIOIntRegister), (26 bytes).
    Removing gpio.o(i.GPIOIntRegisterPin), (30 bytes).
    Removing gpio.o(i.GPIOIntStatus), (14 bytes).
    Removing gpio.o(i.GPIOIntTypeGet), (70 bytes).
    Removing gpio.o(i.GPIOIntTypeSet), (80 bytes).
    Removing gpio.o(i.GPIOIntUnregister), (22 bytes).
    Removing gpio.o(i.GPIOIntUnregisterPin), (26 bytes).
    Removing gpio.o(i.GPIOPadConfigGet), (248 bytes).
    Removing gpio.o(i.GPIOPinRead), (6 bytes).
    Removing gpio.o(i.GPIOPinTypeADC), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeCAN), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparator), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparatorOutput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeDIVSCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEPI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetLED), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetMII), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOInput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOOutput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOOutputOD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeHibernateRTCCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2C), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2CSCL), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeLCD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeOneWire), (28 bytes).
    Removing gpio.o(i.GPIOPinTypePWM), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeQEI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeSSI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTimer), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTrace), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBAnalog), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBDigital), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeHigh), (30 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeLow), (30 bytes).
    Removing gpio.o(i.GPIOPinWakeStatus), (6 bytes).
    Removing gpio.o(i.GPIOPinWrite), (6 bytes).
    Removing gpio.o(i.GPIOUnlockPin), (24 bytes).
    Removing gpio.o(i._GPIOIntNumberGet), (80 bytes).
    Removing sysctl.o(.emb_text), (6 bytes).
    Removing sysctl.o(i.SysCtlAltClkConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlClockFreqSet), (740 bytes).
    Removing sysctl.o(i.SysCtlClockOutConfig), (20 bytes).
    Removing sysctl.o(i.SysCtlClockSet), (288 bytes).
    Removing sysctl.o(i.SysCtlDeepSleep), (32 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockConfigSet), (112 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockSet), (12 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlFlashSectorSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlFlashSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBDisable), (28 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBEnable), (24 bytes).
    Removing sysctl.o(i.SysCtlIntClear), (12 bytes).
    Removing sysctl.o(i.SysCtlIntDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntRegister), (20 bytes).
    Removing sysctl.o(i.SysCtlIntStatus), (16 bytes).
    Removing sysctl.o(i.SysCtlIntUnregister), (18 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlMOSCConfigSet), (12 bytes).
    Removing sysctl.o(i.SysCtlNMIClear), (16 bytes).
    Removing sysctl.o(i.SysCtlNMIStatus), (12 bytes).
    Removing sysctl.o(i.SysCtlPIOSCCalibrate), (76 bytes).
    Removing sysctl.o(i.SysCtlPWMClockGet), (24 bytes).
    Removing sysctl.o(i.SysCtlPWMClockSet), (20 bytes).
    Removing sysctl.o(i.SysCtlPeripheralClockGating), (68 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOff), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOn), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPresent), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReady), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReset), (60 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlReset), (16 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorGet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorSet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetCauseClear), (16 bytes).
    Removing sysctl.o(i.SysCtlResetCauseGet), (12 bytes).
    Removing sysctl.o(i.SysCtlSRAMSizeGet), (16 bytes).
    Removing sysctl.o(i.SysCtlSleep), (4 bytes).
    Removing sysctl.o(i.SysCtlSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlVCOGet), (120 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventClear), (16 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventStatus), (12 bytes).
    Removing uart.o(i.UART9BitAddrSend), (38 bytes).
    Removing uart.o(i.UART9BitAddrSet), (10 bytes).
    Removing uart.o(i.UART9BitDisable), (14 bytes).
    Removing uart.o(i.UART9BitEnable), (14 bytes).
    Removing uart.o(i.UARTBreakCtl), (18 bytes).
    Removing uart.o(i.UARTBusy), (8 bytes).
    Removing uart.o(i.UARTCharGet), (12 bytes).
    Removing uart.o(i.UARTCharPutNonBlocking), (16 bytes).
    Removing uart.o(i.UARTClockSourceGet), (6 bytes).
    Removing uart.o(i.UARTClockSourceSet), (6 bytes).
    Removing uart.o(i.UARTConfigGetExpClk), (46 bytes).
    Removing uart.o(i.UARTDMADisable), (10 bytes).
    Removing uart.o(i.UARTDMAEnable), (8 bytes).
    Removing uart.o(i.UARTDisableSIR), (10 bytes).
    Removing uart.o(i.UARTEnableSIR), (18 bytes).
    Removing uart.o(i.UARTFIFODisable), (10 bytes).
    Removing uart.o(i.UARTFIFOLevelGet), (16 bytes).
    Removing uart.o(i.UARTFIFOLevelSet), (6 bytes).
    Removing uart.o(i.UARTFlowControlGet), (8 bytes).
    Removing uart.o(i.UARTFlowControlSet), (12 bytes).
    Removing uart.o(i.UARTIntClear), (4 bytes).
    Removing uart.o(i.UARTIntDisable), (10 bytes).
    Removing uart.o(i.UARTIntEnable), (8 bytes).
    Removing uart.o(i.UARTIntRegister), (88 bytes).
    Removing uart.o(i.UARTIntStatus), (10 bytes).
    Removing uart.o(i.UARTIntUnregister), (88 bytes).
    Removing uart.o(i.UARTLoopbackEnable), (10 bytes).
    Removing uart.o(i.UARTModemControlClear), (14 bytes).
    Removing uart.o(i.UARTModemControlGet), (8 bytes).
    Removing uart.o(i.UARTModemControlSet), (12 bytes).
    Removing uart.o(i.UARTModemStatusGet), (10 bytes).
    Removing uart.o(i.UARTParityModeGet), (8 bytes).
    Removing uart.o(i.UARTParityModeSet), (12 bytes).
    Removing uart.o(i.UARTRxErrorClear), (6 bytes).
    Removing uart.o(i.UARTRxErrorGet), (8 bytes).
    Removing uart.o(i.UARTSmartCardDisable), (10 bytes).
    Removing uart.o(i.UARTSmartCardEnable), (22 bytes).
    Removing uart.o(i.UARTSpaceAvail), (10 bytes).
    Removing uart.o(i.UARTTxIntModeGet), (8 bytes).
    Removing uart.o(i.UARTTxIntModeSet), (12 bytes).
    Removing uart.o(.constdata), (128 bytes).
    Removing cpu.o(.emb_text), (38 bytes).
    Removing interrupt.o(i.IntDisable), (100 bytes).
    Removing interrupt.o(i.IntEnable), (100 bytes).
    Removing interrupt.o(i.IntIsEnabled), (96 bytes).
    Removing interrupt.o(i.IntMasterDisable), (14 bytes).
    Removing interrupt.o(i.IntMasterEnable), (14 bytes).
    Removing interrupt.o(i.IntPendClear), (68 bytes).
    Removing interrupt.o(i.IntPendSet), (84 bytes).
    Removing interrupt.o(i.IntPriorityGet), (28 bytes).
    Removing interrupt.o(i.IntPriorityGroupingGet), (36 bytes).
    Removing interrupt.o(i.IntPriorityGroupingSet), (28 bytes).
    Removing interrupt.o(i.IntPriorityMaskGet), (4 bytes).
    Removing interrupt.o(i.IntPriorityMaskSet), (4 bytes).
    Removing interrupt.o(i.IntPrioritySet), (40 bytes).
    Removing interrupt.o(i.IntRegister), (52 bytes).
    Removing interrupt.o(i.IntTrigger), (12 bytes).
    Removing interrupt.o(i.IntUnregister), (20 bytes).
    Removing interrupt.o(i._IntDefaultHandler), (2 bytes).
    Removing interrupt.o(.constdata), (268 bytes).
    Removing interrupt.o(vtable), (620 bytes).

404 unused section(s) (total 14780 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    LCD.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    Uart0.c                                  0x00000000   Number         0  uart0.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    heap_2.c                                 0x00000000   Number         0  heap_2.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks_1.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x000002a8   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x000002c4   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000002e0   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x000002e2   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x000002e6   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x000002e8   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x000002ea   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x000002ec   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000002ec   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x000002ec   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x000002f2   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x000002f2   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x000002f6   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x000002f6   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x000002fe   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000300   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000300   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000304   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0000030c   Number         0  startup_tm4c123.o(.text)
    .text                                    0x0000030c   Section      276  startup_tm4c123.o(.text)
    .text                                    0x00000420   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x000004aa   Section       16  aeabi_memset4.o(.text)
    .text                                    0x000004ba   Section        0  heapauxi.o(.text)
    .text                                    0x000004c0   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x00000524   Section       78  rt_memclr_w.o(.text)
    .text                                    0x00000572   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x000005bc   Section        0  exit.o(.text)
    .text                                    0x000005d0   Section        8  libspace.o(.text)
    .text                                    0x000005d8   Section        0  sys_exit.o(.text)
    .text                                    0x000005e4   Section        2  use_no_semi.o(.text)
    .text                                    0x000005e6   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x000005e8   Section        0  lcd.o(.text.LCD_command)
    [Anonymous Symbol]                       0x00000608   Section        0  lcd.o(.text.LCD_init)
    [Anonymous Symbol]                       0x0000067c   Section        0  lcd.o(.text.LCD_setcursorRowCol)
    [Anonymous Symbol]                       0x000006b0   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00000710   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00000714   Section        0  uart0.o(.text.Read_From_Keyboard)
    [Anonymous Symbol]                       0x00000758   Section        0  uart0.o(.text.Read_Time)
    [Anonymous Symbol]                       0x000007a0   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x000007c0   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x000007c4   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x000007f4   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00000864   Section        0  main.o(.text.Task2)
    [Anonymous Symbol]                       0x000009f0   Section        0  main.o(.text.Task3)
    [Anonymous Symbol]                       0x00000b50   Section        0  main.o(.text.Taskl)
    [Anonymous Symbol]                       0x00000bc4   Section        0  tasks_1.o(.text.eTaskConfirmSleepModeStatus)
    [Anonymous Symbol]                       0x00000c00   Section        0  uart0.o(.text.initUART)
    [Anonymous Symbol]                       0x00000c60   Section        0  lcd.o(.text.lcd_data)
    [Anonymous Symbol]                       0x00000c80   Section        0  lcd.o(.text.lcd_text_data)
    [Anonymous Symbol]                       0x00000cbc   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x00000d71   Thumb Code   170  tasks_1.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00000d70   Section        0  tasks_1.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x00000e1d   Thumb Code   174  tasks_1.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x00000e1c   Section        0  tasks_1.o(.text.prvAddNewTaskToReadyList)
    prvCheckTasksWaitingTermination          0x00000ecd   Thumb Code    78  tasks_1.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x00000ecc   Section        0  tasks_1.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x00000f1d   Thumb Code    38  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x00000f1c   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x00000f45   Thumb Code   122  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x00000f44   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x00000fc1   Thumb Code    18  tasks_1.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x00000fc0   Section        0  tasks_1.o(.text.prvDeleteTCB)
    prvGetExpectedIdleTime                   0x00000fd5   Thumb Code    68  tasks_1.o(.text.prvGetExpectedIdleTime)
    [Anonymous Symbol]                       0x00000fd4   Section        0  tasks_1.o(.text.prvGetExpectedIdleTime)
    prvHeapInit                              0x00001019   Thumb Code    50  heap_2.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x00001018   Section        0  heap_2.o(.text.prvHeapInit)
    prvIdleTask                              0x0000104d   Thumb Code   114  tasks_1.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x0000104c   Section        0  tasks_1.o(.text.prvIdleTask)
    prvInitialiseNewQueue                    0x000010c1   Thumb Code    36  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x000010c0   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x000010e5   Thumb Code   156  tasks_1.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x000010e4   Section        0  tasks_1.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x00001181   Thumb Code   110  tasks_1.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x00001180   Section        0  tasks_1.o(.text.prvInitialiseTaskLists)
    prvIsQueueEmpty                          0x000011f1   Thumb Code    24  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x000011f0   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x00001209   Thumb Code    28  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x00001208   Section        0  queue.o(.text.prvIsQueueFull)
    prvNotifyQueueSetContainer               0x00001225   Thumb Code   118  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x00001224   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x0000129d   Thumb Code    34  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x0000129c   Section        0  port.o(.text.prvPortStartFirstTask)
    prvResetNextTaskUnblockTime              0x000012c5   Thumb Code    40  tasks_1.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x000012c4   Section        0  tasks_1.o(.text.prvResetNextTaskUnblockTime)
    prvTaskExitError                         0x000012ed   Thumb Code    50  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x000012ec   Section        0  port.o(.text.prvTaskExitError)
    prvUnlockQueue                           0x00001321   Thumb Code   134  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001320   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x000013a8   Section        0  heap_2.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00001478   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x000014a0   Section        0  uart0.o(.text.send_char_to_uart)
    [Anonymous Symbol]                       0x000014b4   Section        0  uart0.o(.text.send_text_to_uart)
    [Anonymous Symbol]                       0x000014dc   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00001500   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00001518   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00001520   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x0000155c   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x00001579   Thumb Code    14  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00001578   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x0000158c   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x000015d4   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00001604   Section        0  heap_2.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00001648   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x000016ac   Section        0  port.o(.text.vPortSuppressTicksAndSleep)
    [Anonymous Symbol]                       0x000017c0   Section        0  tasks_1.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x00001814   Section        0  tasks_1.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00001830   Section        0  tasks_1.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00001840   Section        0  tasks_1.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00001874   Section        0  tasks_1.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x000018fc   Section        0  tasks_1.o(.text.vTaskStepTick)
    [Anonymous Symbol]                       0x00001934   Section        0  tasks_1.o(.text.vTaskSuspendAll)
    [Anonymous Symbol]                       0x00001944   Section        0  tasks_1.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x000019cc   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00001ae0   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00001b24   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x00001ba4   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x00001d74   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x00001ef8   Section        0  tasks_1.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x00001f9c   Section        0  tasks_1.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00001ffc   Section        0  tasks_1.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x00002024   Section        0  tasks_1.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00002188   Section        0  tasks_1.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x0000223c   Section        0  tasks_1.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x000022d8   Section        0  tasks_1.o(.text.xTaskResumeAll)
    i.GPIODirModeSet                         0x000023f0   Section        0  gpio.o(i.GPIODirModeSet)
    i.GPIOPadConfigSet                       0x00002418   Section        0  gpio.o(i.GPIOPadConfigSet)
    i.GPIOPinConfigure                       0x00002588   Section        0  gpio.o(i.GPIOPinConfigure)
    i.GPIOPinTypeUART                        0x000025cc   Section        0  gpio.o(i.GPIOPinTypeUART)
    i.SysCtlClockGet                         0x000025e8   Section        0  sysctl.o(i.SysCtlClockGet)
    i.SysCtlPeripheralEnable                 0x0000273c   Section        0  sysctl.o(i.SysCtlPeripheralEnable)
    i.UARTCharGetNonBlocking                 0x00002764   Section        0  uart.o(i.UARTCharGetNonBlocking)
    i.UARTCharPut                            0x00002774   Section        0  uart.o(i.UARTCharPut)
    i.UARTCharsAvail                         0x00002780   Section        0  uart.o(i.UARTCharsAvail)
    i.UARTConfigSetExpClk                    0x0000278a   Section        0  uart.o(i.UARTConfigSetExpClk)
    i.UARTDisable                            0x000027f8   Section        0  uart.o(i.UARTDisable)
    i.UARTEnable                             0x00002816   Section        0  uart.o(i.UARTEnable)
    i.UARTFIFOEnable                         0x0000282a   Section        0  uart.o(i.UARTFIFOEnable)
    $v0                                      0x00002834   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x00002834   Section       26  fpinit.o(x$fpl$fpinit)
    g_ppui32GPIOIntMapBlizzard               0x00002850   Data         192  gpio.o(.constdata)
    .constdata                               0x00002850   Section      552  gpio.o(.constdata)
    g_ppui32GPIOIntMapSnowflake              0x00002910   Data         216  gpio.o(.constdata)
    g_pui32GPIOBaseAddrs                     0x000029e8   Data         144  gpio.o(.constdata)
    g_pui32VCOFrequencies                    0x00002a78   Data           8  sysctl.o(.constdata)
    .constdata                               0x00002a78   Section      596  sysctl.o(.constdata)
    g_pui32Xtals                             0x00002a80   Data         108  sysctl.o(.constdata)
    g_pppui32XTALtoVCO                       0x00002aec   Data         432  sysctl.o(.constdata)
    g_sXTALtoMEMTIM                          0x00002c9c   Data          48  sysctl.o(.constdata)
    uxCriticalNesting                        0x20000074   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000074   Section        0  port.o(.data.uxCriticalNesting)
    xFreeBytesRemaining                      0x20000078   Data           4  heap_2.o(.data.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20000078   Section        0  heap_2.o(.data.xFreeBytesRemaining)
    .bss                                     0x20000080   Section       96  libspace.o(.bss)
    pvPortMalloc.xHeapHasBeenInitialised     0x200000e0   Data           1  heap_2.o(.bss.pvPortMalloc.xHeapHasBeenInitialised)
    [Anonymous Symbol]                       0x200000e0   Section        0  heap_2.o(.bss.pvPortMalloc.xHeapHasBeenInitialised)
    pxDelayedTaskList                        0x200000e8   Data           4  tasks_1.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x200000e8   Section        0  tasks_1.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x200000ec   Data           4  tasks_1.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200000ec   Section        0  tasks_1.o(.bss.pxOverflowDelayedTaskList)
    pxReadyTasksLists                        0x200000f0   Data         100  tasks_1.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x200000f0   Section        0  tasks_1.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000158   Data        4096  heap_2.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000158   Section        0  heap_2.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20001158   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20001158   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x2000115c   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x2000115c   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    ulStoppedTimerCompensation               0x20001160   Data           1  port.o(.bss.ulStoppedTimerCompensation)
    [Anonymous Symbol]                       0x20001160   Section        0  port.o(.bss.ulStoppedTimerCompensation)
    ulTimerCountsForOneTick                  0x20001164   Data           4  port.o(.bss.ulTimerCountsForOneTick)
    [Anonymous Symbol]                       0x20001164   Section        0  port.o(.bss.ulTimerCountsForOneTick)
    uxCurrentNumberOfTasks                   0x20001168   Data           4  tasks_1.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20001168   Section        0  tasks_1.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x2000116c   Data           4  tasks_1.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x2000116c   Section        0  tasks_1.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20001170   Data           4  tasks_1.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20001170   Section        0  tasks_1.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20001174   Data           4  tasks_1.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20001174   Section        0  tasks_1.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20001178   Data           4  tasks_1.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20001178   Section        0  tasks_1.o(.bss.uxTopReadyPriority)
    xDelayedTaskList1                        0x2000117c   Data          20  tasks_1.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x2000117c   Section        0  tasks_1.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20001190   Data          20  tasks_1.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20001190   Section        0  tasks_1.o(.bss.xDelayedTaskList2)
    xEnd                                     0x200011a4   Data           8  heap_2.o(.bss.xEnd)
    [Anonymous Symbol]                       0x200011a4   Section        0  heap_2.o(.bss.xEnd)
    xIdleTaskHandle                          0x200011ac   Data           4  tasks_1.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x200011ac   Section        0  tasks_1.o(.bss.xIdleTaskHandle)
    xMaximumPossibleSuppressedTicks          0x200011b0   Data           4  port.o(.bss.xMaximumPossibleSuppressedTicks)
    [Anonymous Symbol]                       0x200011b0   Section        0  port.o(.bss.xMaximumPossibleSuppressedTicks)
    xNextTaskUnblockTime                     0x200011b4   Data           4  tasks_1.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x200011b4   Section        0  tasks_1.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x200011b8   Data           4  tasks_1.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x200011b8   Section        0  tasks_1.o(.bss.xNumOfOverflows)
    xPendedTicks                             0x200011bc   Data           4  tasks_1.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x200011bc   Section        0  tasks_1.o(.bss.xPendedTicks)
    xPendingReadyList                        0x200011c0   Data          20  tasks_1.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x200011c0   Section        0  tasks_1.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x200011dc   Data           4  tasks_1.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x200011dc   Section        0  tasks_1.o(.bss.xSchedulerRunning)
    xStart                                   0x200011e0   Data           8  heap_2.o(.bss.xStart)
    [Anonymous Symbol]                       0x200011e0   Section        0  heap_2.o(.bss.xStart)
    xSuspendedTaskList                       0x200011e8   Data          20  tasks_1.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x200011e8   Section        0  tasks_1.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x200011fc   Data          20  tasks_1.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x200011fc   Section        0  tasks_1.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20001210   Data           4  tasks_1.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20001210   Section        0  tasks_1.o(.bss.xTickCount)
    xYieldPending                            0x20001214   Data           4  tasks_1.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20001214   Section        0  tasks_1.o(.bss.xYieldPending)
    Heap_Mem                                 0x20001218   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x20001218   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x20001218   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x20001218   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x20001418   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000283   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x000002a9   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x000002c5   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x000002e1   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x000002e3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x000002e9   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x000002ed   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000002ed   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000002ed   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x000002f3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x000002f3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x000002f7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x000002f7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x000002ff   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000301   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000301   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000305   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x0000030d   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x00000315   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x00000317   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x00000319   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x0000031b   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x0000031d   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000321   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x00000327   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x00000329   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x0000032b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x0000032d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x0000032f   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x00000331   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x00000333   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x00000335   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x00000337   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x00000339   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x0000033b   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x0000033d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x0000033f   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x00000343   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x00000345   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x00000347   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x00000349   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x0000034b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x00000373   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x00000375   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x000003ab   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x000003e3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x000003e5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x000003e7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x000003e9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x000003eb   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x000003ed   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x000003ef   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x000003f1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x000003f3   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x000003f5   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x000003f7   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x000003f9   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x000003fb   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x000003fd   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x00000401   Thumb Code     0  startup_tm4c123.o(.text)
    __aeabi_memcpy                           0x00000421   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x00000421   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x00000487   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x000004ab   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x000004ab   Thumb Code     0  aeabi_memset4.o(.text)
    __use_two_region_memory                  0x000004bb   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x000004bd   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x000004bf   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x000004c1   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x000004c1   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x000004c1   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x00000509   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x00000525   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x00000525   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x00000525   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x00000529   Thumb Code    74  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x00000573   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x000005bd   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x000005d1   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x000005d1   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x000005d1   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x000005d9   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x000005e5   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x000005e5   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x000005e7   Thumb Code     0  indicate_semi.o(.text)
    LCD_command                              0x000005e9   Thumb Code    30  lcd.o(.text.LCD_command)
    LCD_init                                 0x00000609   Thumb Code   114  lcd.o(.text.LCD_init)
    LCD_setcursorRowCol                      0x0000067d   Thumb Code    44  lcd.o(.text.LCD_setcursorRowCol)
    PendSV_Handler                           0x000006b1   Thumb Code   100  port.o(.text.PendSV_Handler)
    Read_From_Keyboard                       0x00000715   Thumb Code    68  uart0.o(.text.Read_From_Keyboard)
    Read_Time                                0x00000759   Thumb Code    66  uart0.o(.text.Read_Time)
    SVC_Handler                              0x000007a1   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x000007c5   Thumb Code    46  port.o(.text.SysTick_Handler)
    SystemInit                               0x000007f5   Thumb Code   112  system_tm4c123.o(.text.SystemInit)
    Task2                                    0x00000865   Thumb Code   394  main.o(.text.Task2)
    Task3                                    0x000009f1   Thumb Code   208  main.o(.text.Task3)
    Taskl                                    0x00000b51   Thumb Code   116  main.o(.text.Taskl)
    eTaskConfirmSleepModeStatus              0x00000bc5   Thumb Code    60  tasks_1.o(.text.eTaskConfirmSleepModeStatus)
    initUART                                 0x00000c01   Thumb Code    94  uart0.o(.text.initUART)
    lcd_data                                 0x00000c61   Thumb Code    32  lcd.o(.text.lcd_data)
    lcd_text_data                            0x00000c81   Thumb Code    60  lcd.o(.text.lcd_text_data)
    main                                     0x00000cbd   Thumb Code   132  main.o(.text.main)
    pvPortMalloc                             0x000013a9   Thumb Code   206  heap_2.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x00001479   Thumb Code    40  port.o(.text.pxPortInitialiseStack)
    send_char_to_uart                        0x000014a1   Thumb Code    18  uart0.o(.text.send_char_to_uart)
    send_text_to_uart                        0x000014b5   Thumb Code    38  uart0.o(.text.send_text_to_uart)
    uxListRemove                             0x000014dd   Thumb Code    36  list.o(.text.uxListRemove)
    vListInitialise                          0x00001501   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00001519   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00001521   Thumb Code    58  list.o(.text.vListInsert)
    vListInsertEnd                           0x0000155d   Thumb Code    28  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x0000158d   Thumb Code    70  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x000015d5   Thumb Code    46  port.o(.text.vPortExitCritical)
    vPortFree                                0x00001605   Thumb Code    68  heap_2.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00001649   Thumb Code   100  port.o(.text.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x000016ad   Thumb Code   276  port.o(.text.vPortSuppressTicksAndSleep)
    vTaskDelay                               0x000017c1   Thumb Code    84  tasks_1.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x00001815   Thumb Code    26  tasks_1.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00001831   Thumb Code    14  tasks_1.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00001841   Thumb Code    50  tasks_1.o(.text.vTaskPlaceOnEventList)
    vTaskStartScheduler                      0x00001875   Thumb Code   128  tasks_1.o(.text.vTaskStartScheduler)
    vTaskStepTick                            0x000018fd   Thumb Code    54  tasks_1.o(.text.vTaskStepTick)
    vTaskSuspendAll                          0x00001935   Thumb Code    16  tasks_1.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00001945   Thumb Code   134  tasks_1.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x000019cd   Thumb Code   274  port.o(.text.xPortStartScheduler)
    xQueueGenericCreate                      0x00001ae1   Thumb Code    66  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x00001b25   Thumb Code   126  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x00001ba5   Thumb Code   464  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x00001d75   Thumb Code   388  queue.o(.text.xQueueReceive)
    xTaskCheckForTimeOut                     0x00001ef9   Thumb Code   162  tasks_1.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x00001f9d   Thumb Code    96  tasks_1.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x00001ffd   Thumb Code    38  tasks_1.o(.text.xTaskGetSchedulerState)
    xTaskIncrementTick                       0x00002025   Thumb Code   356  tasks_1.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00002189   Thumb Code   178  tasks_1.o(.text.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x0000223d   Thumb Code   156  tasks_1.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x000022d9   Thumb Code   280  tasks_1.o(.text.xTaskResumeAll)
    GPIODirModeSet                           0x000023f1   Thumb Code    40  gpio.o(i.GPIODirModeSet)
    GPIOPadConfigSet                         0x00002419   Thumb Code   354  gpio.o(i.GPIOPadConfigSet)
    GPIOPinConfigure                         0x00002589   Thumb Code    60  gpio.o(i.GPIOPinConfigure)
    GPIOPinTypeUART                          0x000025cd   Thumb Code    28  gpio.o(i.GPIOPinTypeUART)
    SysCtlClockGet                           0x000025e9   Thumb Code   304  sysctl.o(i.SysCtlClockGet)
    SysCtlPeripheralEnable                   0x0000273d   Thumb Code    36  sysctl.o(i.SysCtlPeripheralEnable)
    UARTCharGetNonBlocking                   0x00002765   Thumb Code    16  uart.o(i.UARTCharGetNonBlocking)
    UARTCharPut                              0x00002775   Thumb Code    12  uart.o(i.UARTCharPut)
    UARTCharsAvail                           0x00002781   Thumb Code    10  uart.o(i.UARTCharsAvail)
    UARTConfigSetExpClk                      0x0000278b   Thumb Code   110  uart.o(i.UARTConfigSetExpClk)
    UARTDisable                              0x000027f9   Thumb Code    30  uart.o(i.UARTDisable)
    UARTEnable                               0x00002817   Thumb Code    20  uart.o(i.UARTEnable)
    UARTFIFOEnable                           0x0000282b   Thumb Code    10  uart.o(i.UARTFIFOEnable)
    _fp_init                                 0x00002835   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x0000284d   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x0000284d   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    Region$$Table$$Base                      0x00002ccc   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00002cec   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    cities                                   0x20000004   Data         100  main.o(.data.cities)
    timediff                                 0x20000068   Data          10  main.o(.data.timediff)
    __libspace_start                         0x20000080   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200000e0   Data           0  libspace.o(.bss)
    pxCurrentTCB                             0x200000e4   Data           4  tasks_1.o(.bss.pxCurrentTCB)
    selection                                0x20000154   Data           4  main.o(.bss.selection)
    xQueue2                                  0x200011d4   Data           4  main.o(.bss.xQueue2)
    xQueuel                                  0x200011d8   Data           4  main.o(.bss.xQueuel)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0000030d

  Load Region LR_1 (Base: 0x00000000, Size: 0x00002d68, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00002cec, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO           67    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO         1542  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x00000034   Code   RO         1709    !!!scatter          c_w.l(__scatter.o)
    0x000002a8   0x000002a8   0x0000001a   Code   RO         1711    !!handler_copy      c_w.l(__scatter_copy.o)
    0x000002c2   0x000002c2   0x00000002   PAD
    0x000002c4   0x000002c4   0x0000001c   Code   RO         1713    !!handler_zi        c_w.l(__scatter_zi.o)
    0x000002e0   0x000002e0   0x00000002   Code   RO         1573    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x000002e2   0x000002e2   0x00000004   Code   RO         1579    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1582    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1585    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1587    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1589    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1592    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1594    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1596    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1598    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1600    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1602    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1604    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1606    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1608    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1610    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1612    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1616    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1618    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1620    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO         1622    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000002   Code   RO         1623    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x000002e8   0x000002e8   0x00000002   Code   RO         1645    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         1660    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         1662    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         1665    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         1668    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         1670    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO         1673    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000002   Code   RO         1674    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x000002ec   0x000002ec   0x00000000   Code   RO         1544    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x000002ec   0x000002ec   0x00000000   Code   RO         1550    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x000002ec   0x000002ec   0x00000006   Code   RO         1562    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x000002f2   0x000002f2   0x00000000   Code   RO         1552    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x000002f2   0x000002f2   0x00000004   Code   RO         1553    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO         1555    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x000002f6   0x000002f6   0x00000008   Code   RO         1556    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x000002fe   0x000002fe   0x00000002   Code   RO         1577    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000300   0x00000300   0x00000000   Code   RO         1625    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000300   0x00000300   0x00000004   Code   RO         1626    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000304   0x00000304   0x00000006   Code   RO         1627    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000030a   0x0000030a   0x00000002   PAD
    0x0000030c   0x0000030c   0x00000114   Code   RO           68  * .text               startup_tm4c123.o
    0x00000420   0x00000420   0x0000008a   Code   RO         1536    .text               c_w.l(rt_memcpy_v6.o)
    0x000004aa   0x000004aa   0x00000010   Code   RO         1538    .text               c_w.l(aeabi_memset4.o)
    0x000004ba   0x000004ba   0x00000006   Code   RO         1540    .text               c_w.l(heapauxi.o)
    0x000004c0   0x000004c0   0x00000064   Code   RO         1545    .text               c_w.l(rt_memcpy_w.o)
    0x00000524   0x00000524   0x0000004e   Code   RO         1547    .text               c_w.l(rt_memclr_w.o)
    0x00000572   0x00000572   0x0000004a   Code   RO         1564    .text               c_w.l(sys_stackheap_outer.o)
    0x000005bc   0x000005bc   0x00000012   Code   RO         1566    .text               c_w.l(exit.o)
    0x000005ce   0x000005ce   0x00000002   PAD
    0x000005d0   0x000005d0   0x00000008   Code   RO         1574    .text               c_w.l(libspace.o)
    0x000005d8   0x000005d8   0x0000000c   Code   RO         1635    .text               c_w.l(sys_exit.o)
    0x000005e4   0x000005e4   0x00000002   Code   RO         1650    .text               c_w.l(use_no_semi.o)
    0x000005e6   0x000005e6   0x00000000   Code   RO         1652    .text               c_w.l(indicate_semi.o)
    0x000005e6   0x000005e6   0x00000002   PAD
    0x000005e8   0x000005e8   0x0000001e   Code   RO            6    .text.LCD_command   lcd.o
    0x00000606   0x00000606   0x00000002   PAD
    0x00000608   0x00000608   0x00000072   Code   RO            2    .text.LCD_init      lcd.o
    0x0000067a   0x0000067a   0x00000002   PAD
    0x0000067c   0x0000067c   0x0000002c   Code   RO           14    .text.LCD_setcursorRowCol  lcd.o
    0x000006a8   0x000006a8   0x00000008   PAD
    0x000006b0   0x000006b0   0x00000064   Code   RO          130    .text.PendSV_Handler  port.o
    0x00000714   0x00000714   0x00000044   Code   RO           54    .text.Read_From_Keyboard  uart0.o
    0x00000758   0x00000758   0x00000042   Code   RO           56    .text.Read_Time     uart0.o
    0x0000079a   0x0000079a   0x00000006   PAD
    0x000007a0   0x000007a0   0x00000024   Code   RO          114    .text.SVC_Handler   port.o
    0x000007c4   0x000007c4   0x0000002e   Code   RO          132    .text.SysTick_Handler  port.o
    0x000007f2   0x000007f2   0x00000002   PAD
    0x000007f4   0x000007f4   0x00000070   Code   RO           79    .text.SystemInit    system_tm4c123.o
    0x00000864   0x00000864   0x0000018a   Code   RO           28    .text.Task2         main.o
    0x000009ee   0x000009ee   0x00000002   PAD
    0x000009f0   0x000009f0   0x00000160   Code   RO           30    .text.Task3         main.o
    0x00000b50   0x00000b50   0x00000074   Code   RO           26    .text.Taskl         main.o
    0x00000bc4   0x00000bc4   0x0000003c   Code   RO          353    .text.eTaskConfirmSleepModeStatus  tasks_1.o
    0x00000c00   0x00000c00   0x0000005e   Code   RO           48    .text.initUART      uart0.o
    0x00000c5e   0x00000c5e   0x00000002   PAD
    0x00000c60   0x00000c60   0x00000020   Code   RO           10    .text.lcd_data      lcd.o
    0x00000c80   0x00000c80   0x0000003c   Code   RO           12    .text.lcd_text_data  lcd.o
    0x00000cbc   0x00000cbc   0x000000b4   Code   RO           24    .text.main          main.o
    0x00000d70   0x00000d70   0x000000aa   Code   RO          277    .text.prvAddCurrentTaskToDelayedList  tasks_1.o
    0x00000e1a   0x00000e1a   0x00000002   PAD
    0x00000e1c   0x00000e1c   0x000000ae   Code   RO          265    .text.prvAddNewTaskToReadyList  tasks_1.o
    0x00000eca   0x00000eca   0x00000002   PAD
    0x00000ecc   0x00000ecc   0x0000004e   Code   RO          393    .text.prvCheckTasksWaitingTermination  tasks_1.o
    0x00000f1a   0x00000f1a   0x00000002   PAD
    0x00000f1c   0x00000f1c   0x00000026   Code   RO          213    .text.prvCopyDataFromQueue  queue.o
    0x00000f42   0x00000f42   0x00000002   PAD
    0x00000f44   0x00000f44   0x0000007a   Code   RO          199    .text.prvCopyDataToQueue  queue.o
    0x00000fbe   0x00000fbe   0x00000002   PAD
    0x00000fc0   0x00000fc0   0x00000012   Code   RO          269    .text.prvDeleteTCB  tasks_1.o
    0x00000fd2   0x00000fd2   0x00000002   PAD
    0x00000fd4   0x00000fd4   0x00000044   Code   RO          395    .text.prvGetExpectedIdleTime  tasks_1.o
    0x00001018   0x00001018   0x00000032   Code   RO          154    .text.prvHeapInit   heap_2.o
    0x0000104a   0x0000104a   0x00000002   PAD
    0x0000104c   0x0000104c   0x00000072   Code   RO          303    .text.prvIdleTask   tasks_1.o
    0x000010be   0x000010be   0x00000002   PAD
    0x000010c0   0x000010c0   0x00000024   Code   RO          179    .text.prvInitialiseNewQueue  queue.o
    0x000010e4   0x000010e4   0x0000009c   Code   RO          263    .text.prvInitialiseNewTask  tasks_1.o
    0x00001180   0x00001180   0x0000006e   Code   RO          391    .text.prvInitialiseTaskLists  tasks_1.o
    0x000011ee   0x000011ee   0x00000002   PAD
    0x000011f0   0x000011f0   0x00000018   Code   RO          215    .text.prvIsQueueEmpty  queue.o
    0x00001208   0x00001208   0x0000001c   Code   RO          203    .text.prvIsQueueFull  queue.o
    0x00001224   0x00001224   0x00000076   Code   RO          201    .text.prvNotifyQueueSetContainer  queue.o
    0x0000129a   0x0000129a   0x00000002   PAD
    0x0000129c   0x0000129c   0x00000028   Code   RO          122    .text.prvPortStartFirstTask  port.o
    0x000012c4   0x000012c4   0x00000028   Code   RO          271    .text.prvResetNextTaskUnblockTime  tasks_1.o
    0x000012ec   0x000012ec   0x00000032   Code   RO          112    .text.prvTaskExitError  port.o
    0x0000131e   0x0000131e   0x00000002   PAD
    0x00001320   0x00001320   0x00000086   Code   RO          205    .text.prvUnlockQueue  queue.o
    0x000013a6   0x000013a6   0x00000002   PAD
    0x000013a8   0x000013a8   0x000000ce   Code   RO          152    .text.pvPortMalloc  heap_2.o
    0x00001476   0x00001476   0x00000002   PAD
    0x00001478   0x00001478   0x00000028   Code   RO          110    .text.pxPortInitialiseStack  port.o
    0x000014a0   0x000014a0   0x00000012   Code   RO           52    .text.send_char_to_uart  uart0.o
    0x000014b2   0x000014b2   0x00000002   PAD
    0x000014b4   0x000014b4   0x00000026   Code   RO           50    .text.send_text_to_uart  uart0.o
    0x000014da   0x000014da   0x00000002   PAD
    0x000014dc   0x000014dc   0x00000024   Code   RO          100    .text.uxListRemove  list.o
    0x00001500   0x00001500   0x00000016   Code   RO           92    .text.vListInitialise  list.o
    0x00001516   0x00001516   0x00000002   PAD
    0x00001518   0x00001518   0x00000006   Code   RO           94    .text.vListInitialiseItem  list.o
    0x0000151e   0x0000151e   0x00000002   PAD
    0x00001520   0x00001520   0x0000003a   Code   RO           98    .text.vListInsert   list.o
    0x0000155a   0x0000155a   0x00000002   PAD
    0x0000155c   0x0000155c   0x0000001c   Code   RO           96    .text.vListInsertEnd  list.o
    0x00001578   0x00001578   0x00000014   Code   RO          120    .text.vPortEnableVFP  port.o
    0x0000158c   0x0000158c   0x00000046   Code   RO          126    .text.vPortEnterCritical  port.o
    0x000015d2   0x000015d2   0x00000002   PAD
    0x000015d4   0x000015d4   0x0000002e   Code   RO          128    .text.vPortExitCritical  port.o
    0x00001602   0x00001602   0x00000002   PAD
    0x00001604   0x00001604   0x00000044   Code   RO          156    .text.vPortFree     heap_2.o
    0x00001648   0x00001648   0x00000064   Code   RO          118    .text.vPortSetupTimerInterrupt  port.o
    0x000016ac   0x000016ac   0x00000114   Code   RO          134    .text.vPortSuppressTicksAndSleep  port.o
    0x000017c0   0x000017c0   0x00000054   Code   RO          281    .text.vTaskDelay    tasks_1.o
    0x00001814   0x00001814   0x0000001a   Code   RO          343    .text.vTaskInternalSetTimeOutState  tasks_1.o
    0x0000182e   0x0000182e   0x00000002   PAD
    0x00001830   0x00001830   0x0000000e   Code   RO          347    .text.vTaskMissedYield  tasks_1.o
    0x0000183e   0x0000183e   0x00000002   PAD
    0x00001840   0x00001840   0x00000032   Code   RO          333    .text.vTaskPlaceOnEventList  tasks_1.o
    0x00001872   0x00001872   0x00000002   PAD
    0x00001874   0x00001874   0x00000088   Code   RO          301    .text.vTaskStartScheduler  tasks_1.o
    0x000018fc   0x000018fc   0x00000036   Code   RO          327    .text.vTaskStepTick  tasks_1.o
    0x00001932   0x00001932   0x00000002   PAD
    0x00001934   0x00001934   0x00000010   Code   RO          275    .text.vTaskSuspendAll  tasks_1.o
    0x00001944   0x00001944   0x00000086   Code   RO          293    .text.vTaskSwitchContext  tasks_1.o
    0x000019ca   0x000019ca   0x00000002   PAD
    0x000019cc   0x000019cc   0x00000112   Code   RO          116    .text.xPortStartScheduler  port.o
    0x00001ade   0x00001ade   0x00000002   PAD
    0x00001ae0   0x00001ae0   0x00000042   Code   RO          177    .text.xQueueGenericCreate  queue.o
    0x00001b22   0x00001b22   0x00000002   PAD
    0x00001b24   0x00001b24   0x0000007e   Code   RO          175    .text.xQueueGenericReset  queue.o
    0x00001ba2   0x00001ba2   0x00000002   PAD
    0x00001ba4   0x00001ba4   0x000001d0   Code   RO          191    .text.xQueueGenericSend  queue.o
    0x00001d74   0x00001d74   0x00000184   Code   RO          211    .text.xQueueReceive  queue.o
    0x00001ef8   0x00001ef8   0x000000a2   Code   RO          345    .text.xTaskCheckForTimeOut  tasks_1.o
    0x00001f9a   0x00001f9a   0x00000002   PAD
    0x00001f9c   0x00001f9c   0x00000060   Code   RO          261    .text.xTaskCreate   tasks_1.o
    0x00001ffc   0x00001ffc   0x00000026   Code   RO          365    .text.xTaskGetSchedulerState  tasks_1.o
    0x00002022   0x00002022   0x00000002   PAD
    0x00002024   0x00002024   0x00000164   Code   RO          307    .text.xTaskIncrementTick  tasks_1.o
    0x00002188   0x00002188   0x000000b2   Code   RO          369    .text.xTaskPriorityDisinherit  tasks_1.o
    0x0000223a   0x0000223a   0x00000002   PAD
    0x0000223c   0x0000223c   0x0000009c   Code   RO          337    .text.xTaskRemoveFromEventList  tasks_1.o
    0x000022d8   0x000022d8   0x00000118   Code   RO          279    .text.xTaskResumeAll  tasks_1.o
    0x000023f0   0x000023f0   0x00000028   Code   RO          430    i.GPIODirModeSet    driverlib.lib(gpio.o)
    0x00002418   0x00002418   0x00000170   Code   RO          442    i.GPIOPadConfigSet  driverlib.lib(gpio.o)
    0x00002588   0x00002588   0x00000044   Code   RO          443    i.GPIOPinConfigure  driverlib.lib(gpio.o)
    0x000025cc   0x000025cc   0x0000001c   Code   RO          466    i.GPIOPinTypeUART   driverlib.lib(gpio.o)
    0x000025e8   0x000025e8   0x00000154   Code   RO          766    i.SysCtlClockGet    driverlib.lib(sysctl.o)
    0x0000273c   0x0000273c   0x00000028   Code   RO          797    i.SysCtlPeripheralEnable  driverlib.lib(sysctl.o)
    0x00002764   0x00002764   0x00000010   Code   RO         1124    i.UARTCharGetNonBlocking  driverlib.lib(uart.o)
    0x00002774   0x00002774   0x0000000c   Code   RO         1125    i.UARTCharPut       driverlib.lib(uart.o)
    0x00002780   0x00002780   0x0000000a   Code   RO         1127    i.UARTCharsAvail    driverlib.lib(uart.o)
    0x0000278a   0x0000278a   0x0000006e   Code   RO         1131    i.UARTConfigSetExpClk  driverlib.lib(uart.o)
    0x000027f8   0x000027f8   0x0000001e   Code   RO         1134    i.UARTDisable       driverlib.lib(uart.o)
    0x00002816   0x00002816   0x00000014   Code   RO         1136    i.UARTEnable        driverlib.lib(uart.o)
    0x0000282a   0x0000282a   0x0000000a   Code   RO         1139    i.UARTFIFOEnable    driverlib.lib(uart.o)
    0x00002834   0x00002834   0x0000001a   Code   RO         1633    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x0000284e   0x0000284e   0x00000002   PAD
    0x00002850   0x00002850   0x00000228   Data   RO          475    .constdata          driverlib.lib(gpio.o)
    0x00002a78   0x00002a78   0x00000254   Data   RO          819    .constdata          driverlib.lib(sysctl.o)
    0x00002ccc   0x00002ccc   0x00000020   Data   RO         1708    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00002cec, Size: 0x0000007c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00002cec   0x00000004   Data   RW           81    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   0x00002cf0   0x00000064   Data   RW           34    .data.cities        main.o
    0x20000068   0x00002d54   0x0000000a   Data   RW           35    .data.timediff      main.o
    0x20000072   0x00002d5e   0x00000002   PAD
    0x20000074   0x00002d60   0x00000004   Data   RW          140    .data.uxCriticalNesting  port.o
    0x20000078   0x00002d64   0x00000004   Data   RW          165    .data.xFreeBytesRemaining  heap_2.o


    Execution Region ER_ZI (Exec base: 0x20000080, Load base: 0x00002d68, Size: 0x00001398, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000080        -       0x00000060   Zero   RW         1575    .bss                c_w.l(libspace.o)
    0x200000e0        -       0x00000001   Zero   RW          162    .bss.pvPortMalloc.xHeapHasBeenInitialised  heap_2.o
    0x200000e1   0x00002d68   0x00000003   PAD
    0x200000e4        -       0x00000004   Zero   RW          397    .bss.pxCurrentTCB   tasks_1.o
    0x200000e8        -       0x00000004   Zero   RW          407    .bss.pxDelayedTaskList  tasks_1.o
    0x200000ec        -       0x00000004   Zero   RW          408    .bss.pxOverflowDelayedTaskList  tasks_1.o
    0x200000f0        -       0x00000064   Zero   RW          398    .bss.pxReadyTasksLists  tasks_1.o
    0x20000154        -       0x00000004   Zero   RW           38    .bss.selection      main.o
    0x20000158        -       0x00001000   Zero   RW          166    .bss.ucHeap         heap_2.o
    0x20001158        -       0x00000001   Zero   RW          138    .bss.ucMaxSysCallPriority  port.o
    0x20001159   0x00002d68   0x00000003   PAD
    0x2000115c        -       0x00000004   Zero   RW          139    .bss.ulMaxPRIGROUPValue  port.o
    0x20001160        -       0x00000001   Zero   RW          143    .bss.ulStoppedTimerCompensation  port.o
    0x20001161   0x00002d68   0x00000003   PAD
    0x20001164        -       0x00000004   Zero   RW          142    .bss.ulTimerCountsForOneTick  port.o
    0x20001168        -       0x00000004   Zero   RW          403    .bss.uxCurrentNumberOfTasks  tasks_1.o
    0x2000116c        -       0x00000004   Zero   RW          402    .bss.uxDeletedTasksWaitingCleanUp  tasks_1.o
    0x20001170        -       0x00000004   Zero   RW          405    .bss.uxSchedulerSuspended  tasks_1.o
    0x20001174        -       0x00000004   Zero   RW          400    .bss.uxTaskNumber   tasks_1.o
    0x20001178        -       0x00000004   Zero   RW          399    .bss.uxTopReadyPriority  tasks_1.o
    0x2000117c        -       0x00000014   Zero   RW          416    .bss.xDelayedTaskList1  tasks_1.o
    0x20001190        -       0x00000014   Zero   RW          417    .bss.xDelayedTaskList2  tasks_1.o
    0x200011a4        -       0x00000008   Zero   RW          164    .bss.xEnd           heap_2.o
    0x200011ac        -       0x00000004   Zero   RW          411    .bss.xIdleTaskHandle  tasks_1.o
    0x200011b0        -       0x00000004   Zero   RW          141    .bss.xMaximumPossibleSuppressedTicks  port.o
    0x200011b4        -       0x00000004   Zero   RW          412    .bss.xNextTaskUnblockTime  tasks_1.o
    0x200011b8        -       0x00000004   Zero   RW          415    .bss.xNumOfOverflows  tasks_1.o
    0x200011bc        -       0x00000004   Zero   RW          414    .bss.xPendedTicks   tasks_1.o
    0x200011c0        -       0x00000014   Zero   RW          410    .bss.xPendingReadyList  tasks_1.o
    0x200011d4        -       0x00000004   Zero   RW           37    .bss.xQueue2        main.o
    0x200011d8        -       0x00000004   Zero   RW           36    .bss.xQueuel        main.o
    0x200011dc        -       0x00000004   Zero   RW          404    .bss.xSchedulerRunning  tasks_1.o
    0x200011e0        -       0x00000008   Zero   RW          163    .bss.xStart         heap_2.o
    0x200011e8        -       0x00000014   Zero   RW          409    .bss.xSuspendedTaskList  tasks_1.o
    0x200011fc        -       0x00000014   Zero   RW          401    .bss.xTasksWaitingTermination  tasks_1.o
    0x20001210        -       0x00000004   Zero   RW          406    .bss.xTickCount     tasks_1.o
    0x20001214        -       0x00000004   Zero   RW          413    .bss.xYieldPending  tasks_1.o
    0x20001218        -       0x00000000   Zero   RW           66    HEAP                startup_tm4c123.o
    0x20001218        -       0x00000200   Zero   RW           65    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       324          0          0          4       4113       2991   heap_2.o
       280          0          0          0          0       6625   lcd.o
       150          0          0          0          0       2330   list.o
      1042        192          0        110         12       2611   main.o
      1098         16          0          4         14       5005   port.o
      1544          0          0          0          0      21702   queue.o
       276         24        620          0        512       5480   startup_tm4c123.o
       112          0          0          4          0       6519   system_tm4c123.o
      2768          8          0          0        260      31014   tasks_1.o
       284          0          0          0          0       1316   uart0.o

    ----------------------------------------------------------------------
      7964        240        652        124       4920      85593   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        86          0          0          2          9          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
       504         22        552          0          0       8073   gpio.o
       380         40        596          0          0       3150   sysctl.o
       208          0          0          0          0       4396   uart.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
      1736         78       1148          0         96      16615   Library Totals
        10          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       608         16          0          0         96        880   c_w.l
      1092         62       1148          0          0      15619   driverlib.lib
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
      1736         78       1148          0         96      16615   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      9700        318       1800        124       5016     100816   Grand Totals
      9700        318       1800        124       5016     100816   ELF Image Totals
      9700        318       1800        124          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                11500 (  11.23kB)
    Total RW  Size (RW Data + ZI Data)              5140 (   5.02kB)
    Total ROM Size (Code + RO Data + RW Data)      11624 (  11.35kB)

==============================================================================

